[project]
name = "recur-scan"
version = "0.1.0"
description = "Machine learning system for identifying recurring financial transactions from bank data"
readme = "README.md"
requires-python = ">=3.12"
authors = [
    {name = "Recur-Scan Team"}
]
license = {text = "Apache-2.0"}
keywords = ["finance", "machine-learning", "transactions", "recurring"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Financial and Insurance Industry",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial",
    "Typing :: Typed"
]
dependencies = [
    "joblib>=1.3.2",
    "loguru>=0.7.3",
    "matplotlib>=3.10.1",
    "pandas>=2.2.3",
    "pandas-stubs>=2.2.0.230605",
    "scikit-learn>=1.6.1",
    "shap>=0.47.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/recur_scan"]
include = ["src/recur_scan/py.typed"]  # Include py.typed marker

[dependency-groups]
dev = [
    "deptry>=0.23.0",
    "ipykernel>=6.29.5",
    "mypy>=1.15.0",
    "pip>=25.0",
    "pre-commit>=4.1.0",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "pyupgrade>=3.19.1",
    "ruff>=0.9.4",
]

[tool.ruff]
line-length = 120
fix = true
target-version = "py312"  # Match your Python version requirement

[tool.ruff.format]
preview = true
quote-style = "double"  # Standardize on double quotes

[tool.ruff.lint]
extend-select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "ANN", # flake8-annotations
    "PT",  # flake8-pytest-style
    "RUF", # Ruff-specific rules
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "ARG", # flake8-unused-arguments
    "ERA", # eradicate (commented out code)
]
ignore = [
    "S101",  # assert statements
    "ANN401",  # annotation rules
    "ERA001",  # commented out code
 ]

[tool.ruff.lint.isort]
known-first-party = ["recur_scan"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ANN"]  # Ignore all annotation rules in test files

[tool.mypy]
files = ["src", "scripts"]
namespace_packages = true
explicit_package_bases = true
mypy_path = ["src"]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true
python_version = "3.12"  # Match your Python version requirement
warn_redundant_casts = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disable_error_code = [
    "valid-type",  # ignore PEP 695 type alias errors
    "unused-ignore",  # ignore unused ignores
]

[[tool.mypy.overrides]]
module = [
    "joblib.*",
    "sklearn.*",
    "sklearn.ensemble.*",
    "sklearn.feature_extraction.*",
    "sklearn.metrics.*",
    "sklearn.model_selection.*"
]
ignore_missing_imports = true

[tool.deptry]
exclude = [".venv"]
known_first_party = ["recur_scan"]  # Treats recur_scan as part of your project

[tool.deptry.per_rule_ignores]
DEP004 = ["pytest"]
DEP002 = ["pandas-stubs"]

[tool.pyright]
exclude = ["tests"]
reportMissingTypeStubs = false
